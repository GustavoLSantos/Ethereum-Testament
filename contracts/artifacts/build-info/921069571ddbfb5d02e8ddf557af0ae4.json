{
	"id": "921069571ddbfb5d02e8ddf557af0ae4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/will.sol": {
				"content": "pragma solidity ^0.5.7;\r\n\r\ncontract Will {\r\n\r\n    address owner;\r\n    uint fortune;\r\n    bool isDeceased;\r\n\r\n    constructor() payable public {\r\n        owner = msg.sender;\r\n        fortune = msg.value;\r\n        isDeceased = false;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"The caller of the contract is not the owner.\");\r\n        _;\r\n    }\r\n\r\n    modifier mustBeDeceased {\r\n        require(isDeceased == true, \"The person in question is not deceased.\");\r\n        _;\r\n    }\r\n\r\n    address payable[] familyWallets;\r\n\r\n    mapping(address => uint) inheritance;\r\n\r\n    function setInheritance(address payable wallet, uint amount) public {\r\n        familyWallets.push(wallet);\r\n        inheritance[wallet] = amount;\r\n    }\r\n\r\n    function payout() private mustBeDeceased{\r\n        for(uint i=0; i<familyWallets.length; i++){\r\n            familyWallets[i].transfer(inheritance[familyWallets[i]]);\r\n        }\r\n    } \r\n\r\n    function deceased() public onlyOwner{\r\n        isDeceased = true;\r\n        payout();\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/will.sol": {
				"Will": {
					"abi": [
						{
							"inputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "deceased",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address payable",
									"name": "wallet",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setInheritance",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/will.sol\":27:1046  contract Will {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/will.sol\":161:171  msg.sender */\n  caller\n    /* \"contracts/will.sol\":153:158  owner */\n  0x00\n  dup1\n    /* \"contracts/will.sol\":153:171  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/will.sol\":192:201  msg.value */\n  callvalue\n    /* \"contracts/will.sol\":182:189  fortune */\n  0x01\n    /* \"contracts/will.sol\":182:201  fortune = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/will.sol\":225:230  false */\n  0x00\n    /* \"contracts/will.sol\":212:222  isDeceased */\n  0x02\n  0x00\n    /* \"contracts/will.sol\":212:230  isDeceased = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/will.sol\":27:1046  contract Will {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/will.sol\":27:1046  contract Will {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/will.sol\":27:1046  contract Will {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x72faf2d9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x88d51594\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/will.sol\":950:1041  function deceased() public onlyOwner{\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/will.sol\":598:750  function setInheritance(address payable wallet, uint amount) public {\r... */\n    tag_4:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \"contracts/will.sol\":598:750  function setInheritance(address payable wallet, uint amount) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/will.sol\":950:1041  function deceased() public onlyOwner{\r... */\n    tag_6:\n        /* \"contracts/will.sol\":298:303  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/will.sol\":284:303  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/will.sol\":284:294  msg.sender */\n      caller\n        /* \"contracts/will.sol\":284:303  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/will.sol\":276:352  require(msg.sender == owner, \"The caller of the contract is not the owner.\") */\n      tag_11\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_46243cdd40c361d8fe899ce98b7c4c5e4329c98afc41940ff2456d23aa218c2c\n      0x2c\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_11:\n        /* \"contracts/will.sol\":1010:1014  true */\n      0x01\n        /* \"contracts/will.sol\":997:1007  isDeceased */\n      0x02\n      0x00\n        /* \"contracts/will.sol\":997:1014  isDeceased = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/will.sol\":1025:1033  payout() */\n      tag_13\n        /* \"contracts/will.sol\":1025:1031  payout */\n      tag_14\n        /* \"contracts/will.sol\":1025:1033  payout() */\n      jump\t// in\n    tag_13:\n        /* \"contracts/will.sol\":950:1041  function deceased() public onlyOwner{\r... */\n      jump\t// out\n        /* \"contracts/will.sol\":598:750  function setInheritance(address payable wallet, uint amount) public {\r... */\n    tag_9:\n        /* \"contracts/will.sol\":677:690  familyWallets */\n      0x03\n        /* \"contracts/will.sol\":696:702  wallet */\n      dup3\n        /* \"contracts/will.sol\":677:703  familyWallets.push(wallet) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x01\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"contracts/will.sol\":677:703  familyWallets.push(wallet) */\n      swap1\n      0x01\n      dup3\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/will.sol\":736:742  amount */\n      dup1\n        /* \"contracts/will.sol\":714:725  inheritance */\n      0x04\n        /* \"contracts/will.sol\":714:733  inheritance[wallet] */\n      0x00\n        /* \"contracts/will.sol\":726:732  wallet */\n      dup5\n        /* \"contracts/will.sol\":714:733  inheritance[wallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/will.sol\":714:742  inheritance[wallet] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/will.sol\":598:750  function setInheritance(address payable wallet, uint amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/will.sol\":758:941  function payout() private mustBeDeceased{\r... */\n    tag_14:\n        /* \"contracts/will.sol\":437:441  true */\n      0x01\n        /* \"contracts/will.sol\":423:441  isDeceased == true */\n      iszero\n      iszero\n        /* \"contracts/will.sol\":423:433  isDeceased */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/will.sol\":423:441  isDeceased == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/will.sol\":415:485  require(isDeceased == true, \"The person in question is not deceased.\") */\n      tag_18\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_dba4aa5d18ec5614ba22230d0b4a534ca23b4699e804bebdb4e6b37bf68bf1ed\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_18:\n        /* \"contracts/will.sol\":813:819  uint i */\n      0x00\n        /* \"contracts/will.sol\":820:821  0 */\n      dup1\n        /* \"contracts/will.sol\":813:821  uint i=0 */\n      swap1\n      pop\n        /* \"contracts/will.sol\":809:934  for(uint i=0; i<familyWallets.length; i++){\r... */\n    tag_20:\n        /* \"contracts/will.sol\":825:838  familyWallets */\n      0x03\n        /* \"contracts/will.sol\":825:845  familyWallets.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/will.sol\":823:824  i */\n      dup2\n        /* \"contracts/will.sol\":823:845  i<familyWallets.length */\n      lt\n        /* \"contracts/will.sol\":809:934  for(uint i=0; i<familyWallets.length; i++){\r... */\n      iszero\n      tag_21\n      jumpi\n        /* \"contracts/will.sol\":866:879  familyWallets */\n      0x03\n        /* \"contracts/will.sol\":880:881  i */\n      dup2\n        /* \"contracts/will.sol\":866:882  familyWallets[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_23\n      jumpi\n      invalid\n    tag_23:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/will.sol\":866:891  familyWallets[i].transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/will.sol\":866:922  familyWallets[i].transfer(inheritance[familyWallets[i]]) */\n      0x08fc\n        /* \"contracts/will.sol\":892:903  inheritance */\n      0x04\n        /* \"contracts/will.sol\":892:921  inheritance[familyWallets[i]] */\n      0x00\n        /* \"contracts/will.sol\":904:917  familyWallets */\n      0x03\n        /* \"contracts/will.sol\":918:919  i */\n      dup6\n        /* \"contracts/will.sol\":904:920  familyWallets[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_25\n      jumpi\n      invalid\n    tag_25:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/will.sol\":892:921  inheritance[familyWallets[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/will.sol\":866:922  familyWallets[i].transfer(inheritance[familyWallets[i]]) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"contracts/will.sol\":866:922  familyWallets[i].transfer(inheritance[familyWallets[i]]) */\n      pop\n        /* \"contracts/will.sol\":847:850  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/will.sol\":809:934  for(uint i=0; i<familyWallets.length; i++){\r... */\n      jump(tag_20)\n    tag_21:\n      pop\n        /* \"contracts/will.sol\":758:941  function payout() private mustBeDeceased{\r... */\n      jump\t// out\n    stop\n    data_46243cdd40c361d8fe899ce98b7c4c5e4329c98afc41940ff2456d23aa218c2c 5468652063616c6c6572206f662074686520636f6e7472616374206973206e6f7420746865206f776e65722e\n    data_dba4aa5d18ec5614ba22230d0b4a534ca23b4699e804bebdb4e6b37bf68bf1ed 54686520706572736f6e20696e207175657374696f6e206973206e6f742064656365617365642e\n\n    auxdata: 0xa265627a7a723158200423ef8581579d1d218c4a8e49481cb3ba1862d98f0b51fb331be1b1c4b44c0e64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055506000600260006101000a81548160ff021916908315150217905550610416806100756000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806372faf2d91461003b57806388d5159414610045575b600080fd5b610043610093565b005b6100916004803603604081101561005b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061015d565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610138576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061038f602c913960400191505060405180910390fd5b6001600260006101000a81548160ff02191690831515021790555061015b61020b565b565b60038290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60011515600260009054906101000a900460ff16151514610277576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806103bb6027913960400191505060405180910390fd5b60008090505b60038054905081101561038b576003818154811061029757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60046000600385815481106102ec57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f1935050505015801561037d573d6000803e3d6000fd5b50808060010191505061027d565b5056fe5468652063616c6c6572206f662074686520636f6e7472616374206973206e6f7420746865206f776e65722e54686520706572736f6e20696e207175657374696f6e206973206e6f742064656365617365642ea265627a7a723158200423ef8581579d1d218c4a8e49481cb3ba1862d98f0b51fb331be1b1c4b44c0e64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x416 DUP1 PUSH2 0x75 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72FAF2D9 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x88D51594 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x91 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x138 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x38F PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x15B PUSH2 0x20B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x277 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3BB PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x38B JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x297 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x2EC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x37D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x27D JUMP JUMPDEST POP JUMP INVALID SLOAD PUSH9 0x652063616C6C657220 PUSH16 0x662074686520636F6E74726163742069 PUSH20 0x206E6F7420746865206F776E65722E5468652070 PUSH6 0x72736F6E2069 PUSH15 0x207175657374696F6E206973206E6F PUSH21 0x2064656365617365642EA265627A7A723158200423 0xEF DUP6 DUP2 JUMPI SWAP14 SAR 0x21 DUP13 0x4A DUP15 0x49 0x48 SHR 0xB3 0xBA XOR PUSH3 0xD98F0B MLOAD 0xFB CALLER SHL 0xE1 0xB1 0xC4 0xB4 0x4C 0xE PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "27:1019:0:-;;;161:10;153:5;;:18;;;;;;;;;;;;;;;;;;192:9;182:7;:19;;;;225:5;212:10;;:18;;;;;;;;;;;;;;;;;;27:1019;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806372faf2d91461003b57806388d5159414610045575b600080fd5b610043610093565b005b6100916004803603604081101561005b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061015d565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610138576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061038f602c913960400191505060405180910390fd5b6001600260006101000a81548160ff02191690831515021790555061015b61020b565b565b60038290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60011515600260009054906101000a900460ff16151514610277576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806103bb6027913960400191505060405180910390fd5b60008090505b60038054905081101561038b576003818154811061029757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60046000600385815481106102ec57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f1935050505015801561037d573d6000803e3d6000fd5b50808060010191505061027d565b5056fe5468652063616c6c6572206f662074686520636f6e7472616374206973206e6f7420746865206f776e65722e54686520706572736f6e20696e207175657374696f6e206973206e6f742064656365617365642ea265627a7a723158200423ef8581579d1d218c4a8e49481cb3ba1862d98f0b51fb331be1b1c4b44c0e64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72FAF2D9 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x88D51594 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x91 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x138 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x38F PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x15B PUSH2 0x20B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x277 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3BB PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x38B JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x297 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x2EC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x37D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x27D JUMP JUMPDEST POP JUMP INVALID SLOAD PUSH9 0x652063616C6C657220 PUSH16 0x662074686520636F6E74726163742069 PUSH20 0x206E6F7420746865206F776E65722E5468652070 PUSH6 0x72736F6E2069 PUSH15 0x207175657374696F6E206973206E6F PUSH21 0x2064656365617365642EA265627A7A723158200423 0xEF DUP6 DUP2 JUMPI SWAP14 SAR 0x21 DUP13 0x4A DUP15 0x49 0x48 SHR 0xB3 0xBA XOR PUSH3 0xD98F0B MLOAD 0xFB CALLER SHL 0xE1 0xB1 0xC4 0xB4 0x4C 0xE PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "27:1019:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27:1019:0;;;;;;;;;;;;;;;;;;;;;;;;950:91;;;:::i;:::-;;598:152;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;598:152:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;950:91;298:5;;;;;;;;;;;284:19;;:10;:19;;;276:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1010:4;997:10;;:17;;;;;;;;;;;;;;;;;;1025:8;:6;:8::i;:::-;950:91::o;598:152::-;677:13;696:6;677:26;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;677:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;736:6;714:11;:19;726:6;714:19;;;;;;;;;;;;;;;:28;;;;598:152;;:::o;758:183::-;437:4;423:18;;:10;;;;;;;;;;;:18;;;415:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:6;820:1;813:8;;809:125;825:13;:20;;;;823:1;:22;809:125;;;866:13;880:1;866:16;;;;;;;;;;;;;;;;;;;;;;;;;:25;;:56;892:11;:29;904:13;918:1;904:16;;;;;;;;;;;;;;;;;;;;;;;;;892:29;;;;;;;;;;;;;;;;866:56;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;866:56:0;847:3;;;;;;;809:125;;;;758:183::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "209200",
								"executionCost": "61973",
								"totalCost": "271173"
							},
							"external": {
								"deceased()": "infinite",
								"setInheritance(address,uint256)": "62154"
							},
							"internal": {
								"payout()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 1046,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 27,
									"end": 1046,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 27,
									"end": 1046,
									"name": "MSTORE"
								},
								{
									"begin": 161,
									"end": 171,
									"name": "CALLER"
								},
								{
									"begin": 153,
									"end": 158,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 153,
									"end": 158,
									"name": "DUP1"
								},
								{
									"begin": 153,
									"end": 171,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 153,
									"end": 171,
									"name": "EXP"
								},
								{
									"begin": 153,
									"end": 171,
									"name": "DUP2"
								},
								{
									"begin": 153,
									"end": 171,
									"name": "SLOAD"
								},
								{
									"begin": 153,
									"end": 171,
									"name": "DUP2"
								},
								{
									"begin": 153,
									"end": 171,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 153,
									"end": 171,
									"name": "MUL"
								},
								{
									"begin": 153,
									"end": 171,
									"name": "NOT"
								},
								{
									"begin": 153,
									"end": 171,
									"name": "AND"
								},
								{
									"begin": 153,
									"end": 171,
									"name": "SWAP1"
								},
								{
									"begin": 153,
									"end": 171,
									"name": "DUP4"
								},
								{
									"begin": 153,
									"end": 171,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 153,
									"end": 171,
									"name": "AND"
								},
								{
									"begin": 153,
									"end": 171,
									"name": "MUL"
								},
								{
									"begin": 153,
									"end": 171,
									"name": "OR"
								},
								{
									"begin": 153,
									"end": 171,
									"name": "SWAP1"
								},
								{
									"begin": 153,
									"end": 171,
									"name": "SSTORE"
								},
								{
									"begin": 153,
									"end": 171,
									"name": "POP"
								},
								{
									"begin": 192,
									"end": 201,
									"name": "CALLVALUE"
								},
								{
									"begin": 182,
									"end": 189,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 182,
									"end": 201,
									"name": "DUP2"
								},
								{
									"begin": 182,
									"end": 201,
									"name": "SWAP1"
								},
								{
									"begin": 182,
									"end": 201,
									"name": "SSTORE"
								},
								{
									"begin": 182,
									"end": 201,
									"name": "POP"
								},
								{
									"begin": 225,
									"end": 230,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 212,
									"end": 222,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 212,
									"end": 222,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 212,
									"end": 230,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 212,
									"end": 230,
									"name": "EXP"
								},
								{
									"begin": 212,
									"end": 230,
									"name": "DUP2"
								},
								{
									"begin": 212,
									"end": 230,
									"name": "SLOAD"
								},
								{
									"begin": 212,
									"end": 230,
									"name": "DUP2"
								},
								{
									"begin": 212,
									"end": 230,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 212,
									"end": 230,
									"name": "MUL"
								},
								{
									"begin": 212,
									"end": 230,
									"name": "NOT"
								},
								{
									"begin": 212,
									"end": 230,
									"name": "AND"
								},
								{
									"begin": 212,
									"end": 230,
									"name": "SWAP1"
								},
								{
									"begin": 212,
									"end": 230,
									"name": "DUP4"
								},
								{
									"begin": 212,
									"end": 230,
									"name": "ISZERO"
								},
								{
									"begin": 212,
									"end": 230,
									"name": "ISZERO"
								},
								{
									"begin": 212,
									"end": 230,
									"name": "MUL"
								},
								{
									"begin": 212,
									"end": 230,
									"name": "OR"
								},
								{
									"begin": 212,
									"end": 230,
									"name": "SWAP1"
								},
								{
									"begin": 212,
									"end": 230,
									"name": "SSTORE"
								},
								{
									"begin": 212,
									"end": 230,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1046,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1046,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 1046,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1046,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1046,
									"name": "CODECOPY"
								},
								{
									"begin": 27,
									"end": 1046,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1046,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158200423ef8581579d1d218c4a8e49481cb3ba1862d98f0b51fb331be1b1c4b44c0e64736f6c63430005110032",
									".code": [
										{
											"begin": 27,
											"end": 1046,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "MSTORE"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "POP"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "LT"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "SHR"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "PUSH",
											"value": "72FAF2D9"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "PUSH",
											"value": "88D51594"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1046,
											"name": "REVERT"
										},
										{
											"begin": 950,
											"end": 1041,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 950,
											"end": 1041,
											"name": "JUMPDEST"
										},
										{
											"begin": 950,
											"end": 1041,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 950,
											"end": 1041,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 950,
											"end": 1041,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 950,
											"end": 1041,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 950,
											"end": 1041,
											"name": "JUMPDEST"
										},
										{
											"begin": 950,
											"end": 1041,
											"name": "STOP"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "DUP1"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "DUP2"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "ADD"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "DUP1"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "DUP1"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "AND"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "ADD"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "SWAP3"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "SWAP2"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "DUP1"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "ADD"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "SWAP3"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "SWAP2"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "STOP"
										},
										{
											"begin": 950,
											"end": 1041,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 950,
											"end": 1041,
											"name": "JUMPDEST"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "DUP1"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "SWAP1"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "SLOAD"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "SWAP1"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "EXP"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "SWAP1"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "DIV"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "AND"
										},
										{
											"begin": 284,
											"end": 303,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 284,
											"end": 303,
											"name": "AND"
										},
										{
											"begin": 284,
											"end": 294,
											"name": "CALLER"
										},
										{
											"begin": 284,
											"end": 303,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 284,
											"end": 303,
											"name": "AND"
										},
										{
											"begin": 284,
											"end": 303,
											"name": "EQ"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "JUMPI"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "MLOAD"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "DUP2"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "MSTORE"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "ADD"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "DUP1"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "DUP1"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "ADD"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "DUP3"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "DUP2"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "SUB"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "DUP3"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "MSTORE"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "PUSH",
											"value": "2C"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "DUP2"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "MSTORE"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "ADD"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "DUP1"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "PUSH data",
											"value": "46243CDD40C361D8FE899CE98B7C4C5E4329C98AFC41940FF2456D23AA218C2C"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "PUSH",
											"value": "2C"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "SWAP2"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "CODECOPY"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "ADD"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "SWAP2"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "POP"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "POP"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "MLOAD"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "DUP1"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "SWAP2"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "SUB"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "SWAP1"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "REVERT"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 276,
											"end": 352,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1014,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 997,
											"end": 1007,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 997,
											"end": 1007,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "EXP"
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "DUP2"
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "SLOAD"
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "DUP2"
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "MUL"
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "NOT"
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "AND"
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "DUP4"
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ISZERO"
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ISZERO"
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "MUL"
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "OR"
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "SSTORE"
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "POP"
										},
										{
											"begin": 1025,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1025,
											"end": 1031,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1025,
											"end": 1033,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1033,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1025,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 950,
											"end": 1041,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 696,
											"end": 702,
											"name": "DUP3"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "SWAP1"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "SWAP1"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "DUP3"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "SUB"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "SWAP1"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "MSTORE"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "KECCAK256"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "ADD"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "SWAP1"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "SWAP2"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "SWAP3"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "SWAP1"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "SWAP2"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "SWAP1"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "SWAP2"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "EXP"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "DUP2"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "SLOAD"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "DUP2"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "MUL"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "NOT"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "SWAP1"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "DUP4"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "MUL"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "OR"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "SWAP1"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "SSTORE"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "POP"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "POP"
										},
										{
											"begin": 736,
											"end": 742,
											"name": "DUP1"
										},
										{
											"begin": 714,
											"end": 725,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 714,
											"end": 733,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 726,
											"end": 732,
											"name": "DUP5"
										},
										{
											"begin": 714,
											"end": 733,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 714,
											"end": 733,
											"name": "AND"
										},
										{
											"begin": 714,
											"end": 733,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 714,
											"end": 733,
											"name": "AND"
										},
										{
											"begin": 714,
											"end": 733,
											"name": "DUP2"
										},
										{
											"begin": 714,
											"end": 733,
											"name": "MSTORE"
										},
										{
											"begin": 714,
											"end": 733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 714,
											"end": 733,
											"name": "ADD"
										},
										{
											"begin": 714,
											"end": 733,
											"name": "SWAP1"
										},
										{
											"begin": 714,
											"end": 733,
											"name": "DUP2"
										},
										{
											"begin": 714,
											"end": 733,
											"name": "MSTORE"
										},
										{
											"begin": 714,
											"end": 733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 714,
											"end": 733,
											"name": "ADD"
										},
										{
											"begin": 714,
											"end": 733,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 714,
											"end": 733,
											"name": "KECCAK256"
										},
										{
											"begin": 714,
											"end": 742,
											"name": "DUP2"
										},
										{
											"begin": 714,
											"end": 742,
											"name": "SWAP1"
										},
										{
											"begin": 714,
											"end": 742,
											"name": "SSTORE"
										},
										{
											"begin": 714,
											"end": 742,
											"name": "POP"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 598,
											"end": 750,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 758,
											"end": 941,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 758,
											"end": 941,
											"name": "JUMPDEST"
										},
										{
											"begin": 437,
											"end": 441,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 423,
											"end": 441,
											"name": "ISZERO"
										},
										{
											"begin": 423,
											"end": 441,
											"name": "ISZERO"
										},
										{
											"begin": 423,
											"end": 433,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 423,
											"end": 433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 423,
											"end": 433,
											"name": "SWAP1"
										},
										{
											"begin": 423,
											"end": 433,
											"name": "SLOAD"
										},
										{
											"begin": 423,
											"end": 433,
											"name": "SWAP1"
										},
										{
											"begin": 423,
											"end": 433,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 423,
											"end": 433,
											"name": "EXP"
										},
										{
											"begin": 423,
											"end": 433,
											"name": "SWAP1"
										},
										{
											"begin": 423,
											"end": 433,
											"name": "DIV"
										},
										{
											"begin": 423,
											"end": 433,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 423,
											"end": 433,
											"name": "AND"
										},
										{
											"begin": 423,
											"end": 441,
											"name": "ISZERO"
										},
										{
											"begin": 423,
											"end": 441,
											"name": "ISZERO"
										},
										{
											"begin": 423,
											"end": 441,
											"name": "EQ"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "JUMPI"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "MLOAD"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "DUP2"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "MSTORE"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "ADD"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "DUP1"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "DUP1"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "ADD"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "DUP3"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "DUP2"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "SUB"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "DUP3"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "MSTORE"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "DUP2"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "MSTORE"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "ADD"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "DUP1"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "PUSH data",
											"value": "DBA4AA5D18EC5614BA22230D0B4A534CA23B4699E804BEBDB4E6B37BF68BF1ED"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "SWAP2"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "CODECOPY"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "ADD"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "SWAP2"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "POP"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "POP"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "MLOAD"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "DUP1"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "SWAP2"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "SUB"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "SWAP1"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "REVERT"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 415,
											"end": 485,
											"name": "JUMPDEST"
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 820,
											"end": 821,
											"name": "DUP1"
										},
										{
											"begin": 813,
											"end": 821,
											"name": "SWAP1"
										},
										{
											"begin": 813,
											"end": 821,
											"name": "POP"
										},
										{
											"begin": 809,
											"end": 934,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 809,
											"end": 934,
											"name": "JUMPDEST"
										},
										{
											"begin": 825,
											"end": 838,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 825,
											"end": 845,
											"name": "DUP1"
										},
										{
											"begin": 825,
											"end": 845,
											"name": "SLOAD"
										},
										{
											"begin": 825,
											"end": 845,
											"name": "SWAP1"
										},
										{
											"begin": 825,
											"end": 845,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 824,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 845,
											"name": "LT"
										},
										{
											"begin": 809,
											"end": 934,
											"name": "ISZERO"
										},
										{
											"begin": 809,
											"end": 934,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 809,
											"end": 934,
											"name": "JUMPI"
										},
										{
											"begin": 866,
											"end": 879,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 880,
											"end": 881,
											"name": "DUP2"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "DUP2"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "SLOAD"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "DUP2"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "LT"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "JUMPI"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "INVALID"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "JUMPDEST"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "SWAP1"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "MSTORE"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "KECCAK256"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "ADD"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "SWAP1"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "SLOAD"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "SWAP1"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "EXP"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "SWAP1"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "DIV"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 866,
											"end": 882,
											"name": "AND"
										},
										{
											"begin": 866,
											"end": 891,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 866,
											"end": 891,
											"name": "AND"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 892,
											"end": 903,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 904,
											"end": 917,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 918,
											"end": 919,
											"name": "DUP6"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "DUP2"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "SLOAD"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "DUP2"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "LT"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "JUMPI"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "INVALID"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "JUMPDEST"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "SWAP1"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "MSTORE"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "KECCAK256"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "ADD"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "SWAP1"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "SLOAD"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "SWAP1"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "EXP"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "SWAP1"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "DIV"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 904,
											"end": 920,
											"name": "AND"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "AND"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "AND"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "DUP2"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "MSTORE"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "ADD"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "SWAP1"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "DUP2"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "MSTORE"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "ADD"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "KECCAK256"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "SLOAD"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "SWAP1"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "DUP2"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "ISZERO"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "MUL"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "SWAP1"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "MLOAD"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "MLOAD"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "DUP1"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "DUP4"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "SUB"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "DUP2"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "DUP6"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "DUP9"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "DUP9"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "CALL"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "SWAP4"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "POP"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "POP"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "POP"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "POP"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 866,
											"end": 922,
											"name": "POP"
										},
										{
											"begin": 847,
											"end": 850,
											"name": "DUP1"
										},
										{
											"begin": 847,
											"end": 850,
											"name": "DUP1"
										},
										{
											"begin": 847,
											"end": 850,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 847,
											"end": 850,
											"name": "ADD"
										},
										{
											"begin": 847,
											"end": 850,
											"name": "SWAP2"
										},
										{
											"begin": 847,
											"end": 850,
											"name": "POP"
										},
										{
											"begin": 847,
											"end": 850,
											"name": "POP"
										},
										{
											"begin": 809,
											"end": 934,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 809,
											"end": 934,
											"name": "JUMP"
										},
										{
											"begin": 809,
											"end": 934,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 809,
											"end": 934,
											"name": "JUMPDEST"
										},
										{
											"begin": 809,
											"end": 934,
											"name": "POP"
										},
										{
											"begin": 758,
											"end": 941,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"46243CDD40C361D8FE899CE98B7C4C5E4329C98AFC41940FF2456D23AA218C2C": "5468652063616c6c6572206f662074686520636f6e7472616374206973206e6f7420746865206f776e65722e",
										"DBA4AA5D18EC5614BA22230D0B4A534CA23B4699E804BEBDB4E6B37BF68BF1ED": "54686520706572736f6e20696e207175657374696f6e206973206e6f742064656365617365642e"
									}
								}
							}
						},
						"methodIdentifiers": {
							"deceased()": "72faf2d9",
							"setInheritance(address,uint256)": "88d51594"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[],\"name\":\"deceased\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setInheritance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/will.sol\":\"Will\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/will.sol\":{\"keccak256\":\"0xdeee1a6cf19de9d48b8395dddb04a605084d4367ff008ca0bf15124ac3c6ca28\",\"urls\":[\"bzz-raw://030251f75e58ae91a09aa4aa07d6ff58da43b89a667e0102bd15abcbf7101670\",\"dweb:/ipfs/QmVooJYDwTNdKXEpD1E7YkJYDiH5m4X8ejRyBxatNFAVqp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/will.sol:Will",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/will.sol:Will",
								"label": "fortune",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/will.sol:Will",
								"label": "isDeceased",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 51,
								"contract": "contracts/will.sol:Will",
								"label": "familyWallets",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address_payable)dyn_storage"
							},
							{
								"astId": 55,
								"contract": "contracts/will.sol:Will",
								"label": "inheritance",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address_payable)dyn_storage": {
								"base": "t_address_payable",
								"encoding": "dynamic_array",
								"label": "address payable[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/will.sol": {
				"ast": {
					"absolutePath": "contracts/will.sol",
					"exportedSymbols": {
						"Will": [
							119
						]
					},
					"id": 120,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 119,
							"linearizedBaseContracts": [
								119
							],
							"name": "Will",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "50:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "50:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"name": "fortune",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "70:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "70:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"name": "isDeceased",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "89:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 6,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "89:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "142:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 10,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "153:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "161:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "161:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "153:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "153:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 15,
														"name": "fortune",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "182:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 16,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "192:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "192:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "182:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "182:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 20,
														"name": "isDeceased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "212:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "225:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "212:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "212:18:0"
											}
										]
									},
									"documentation": null,
									"id": 25,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "124:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "142:0:0"
									},
									"scope": 119,
									"src": "113:125:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "265:107:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 28,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "284:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "284:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 30,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "298:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "284:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5468652063616c6c6572206f662074686520636f6e7472616374206973206e6f7420746865206f776e65722e",
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "305:46:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_46243cdd40c361d8fe899ce98b7c4c5e4329c98afc41940ff2456d23aa218c2c",
																"typeString": "literal_string \"The caller of the contract is not the owner.\""
															},
															"value": "The caller of the contract is not the owner."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_46243cdd40c361d8fe899ce98b7c4c5e4329c98afc41940ff2456d23aa218c2c",
																"typeString": "literal_string \"The caller of the contract is not the owner.\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															137,
															138
														],
														"referencedDeclaration": 138,
														"src": "276:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "276:76:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "276:76:0"
											},
											{
												"id": 35,
												"nodeType": "PlaceholderStatement",
												"src": "363:1:0"
											}
										]
									},
									"documentation": null,
									"id": 37,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:0:0"
									},
									"src": "246:126:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "404:101:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 40,
																"name": "isDeceased",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "423:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "437:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "423:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "54686520706572736f6e20696e207175657374696f6e206973206e6f742064656365617365642e",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "443:41:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dba4aa5d18ec5614ba22230d0b4a534ca23b4699e804bebdb4e6b37bf68bf1ed",
																"typeString": "literal_string \"The person in question is not deceased.\""
															},
															"value": "The person in question is not deceased."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dba4aa5d18ec5614ba22230d0b4a534ca23b4699e804bebdb4e6b37bf68bf1ed",
																"typeString": "literal_string \"The person in question is not deceased.\""
															}
														],
														"id": 39,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															137,
															138
														],
														"referencedDeclaration": 138,
														"src": "415:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "415:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "415:70:0"
											},
											{
												"id": 46,
												"nodeType": "PlaceholderStatement",
												"src": "496:1:0"
											}
										]
									},
									"documentation": null,
									"id": 48,
									"name": "mustBeDeceased",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "404:0:0"
									},
									"src": "380:125:0",
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 51,
									"name": "familyWallets",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "513:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
										"typeString": "address payable[]"
									},
									"typeName": {
										"baseType": {
											"id": 49,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "513:15:0",
											"stateMutability": "payable",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											}
										},
										"id": 50,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "513:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
											"typeString": "address payable[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 55,
									"name": "inheritance",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "553:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 54,
										"keyType": {
											"id": 52,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "561:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "553:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 53,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "572:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "666:84:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 65,
															"name": "wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "696:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 62,
															"name": "familyWallets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 51,
															"src": "677:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
																"typeString": "address payable[] storage ref"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "677:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_payable_$returns$_t_uint256_$",
															"typeString": "function (address payable) returns (uint256)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "677:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "677:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 68,
															"name": "inheritance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "714:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 70,
														"indexExpression": {
															"argumentTypes": null,
															"id": 69,
															"name": "wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "726:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "714:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 71,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "736:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "714:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "714:28:0"
											}
										]
									},
									"documentation": null,
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setInheritance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"name": "wallet",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "622:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "622:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "646:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "621:37:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "666:0:0"
									},
									"scope": 119,
									"src": "598:152:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "798:143:0",
										"statements": [
											{
												"body": {
													"id": 102,
													"nodeType": "Block",
													"src": "851:83:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 95,
																			"name": "inheritance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 55,
																			"src": "892:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 99,
																		"indexExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 96,
																				"name": "familyWallets",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 51,
																				"src": "904:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
																					"typeString": "address payable[] storage ref"
																				}
																			},
																			"id": 98,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 97,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 81,
																				"src": "918:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "904:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "892:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 91,
																			"name": "familyWallets",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 51,
																			"src": "866:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
																				"typeString": "address payable[] storage ref"
																			}
																		},
																		"id": 93,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 92,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 81,
																			"src": "880:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "866:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 94,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "866:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "866:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 101,
															"nodeType": "ExpressionStatement",
															"src": "866:56:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 84,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "823:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 85,
															"name": "familyWallets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 51,
															"src": "825:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
																"typeString": "address payable[] storage ref"
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "825:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "823:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 103,
												"initializationExpression": {
													"assignments": [
														81
													],
													"declarations": [
														{
															"constant": false,
															"id": 81,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 103,
															"src": "813:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 80,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "813:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 83,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "820:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "813:8:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "847:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 88,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "847:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 90,
													"nodeType": "ExpressionStatement",
													"src": "847:3:0"
												},
												"nodeType": "ForStatement",
												"src": "809:125:0"
											}
										]
									},
									"documentation": null,
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 78,
											"modifierName": {
												"argumentTypes": null,
												"id": 77,
												"name": "mustBeDeceased",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 48,
												"src": "784:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "784:14:0"
										}
									],
									"name": "payout",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "798:0:0"
									},
									"scope": 119,
									"src": "758:183:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "986:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 110,
														"name": "isDeceased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "997:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1010:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "997:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "997:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 114,
														"name": "payout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "1025:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1025:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "1025:8:0"
											}
										]
									},
									"documentation": null,
									"id": 118,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 108,
											"modifierName": {
												"argumentTypes": null,
												"id": 107,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 37,
												"src": "977:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "977:9:0"
										}
									],
									"name": "deceased",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "967:2:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:0"
									},
									"scope": 119,
									"src": "950:91:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 120,
							"src": "27:1019:0"
						}
					],
					"src": "0:1046:0"
				},
				"id": 0
			}
		}
	}
}